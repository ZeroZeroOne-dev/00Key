#include <Arduino.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Fonts/FreeSans9pt7b.h>
#include <Fonts/FreeSansBold9pt7b.h>
#include "OLED.h"

Adafruit_SSD1306 display(128, 64, &Wire2, -1);

bool _capsOn = false;
int _layer = 0;
int _blPercentage = 0;
char _rValue[3];
char _gValue[3];
char _bValue[3];

bool _splashScreenFinished = false;
int _splashScreenDuration = 3000;

// clang-format off

const unsigned char _logo[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0x01, 0x00, 0x00, 
	0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x01, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x07, 0xff, 0xff, 0xf0, 0x03, 0x80, 
	0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x01, 0x00, 
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xe3, 0xfe, 0x00, 0x00, 
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x77, 0xff, 0xf9, 0xff, 0x00, 0x00, 
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0xff, 0xf1, 0xf3, 0xff, 0x80, 0x00, 
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xee, 0xff, 0xff, 0xc0, 0x00, 
	0x10, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x9f, 0xff, 0xff, 0xf7, 0xc0, 0x00, 
	0x00, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x1f, 0xff, 0xf0, 0xe7, 0xe0, 0x00, 
	0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfc, 0x1e, 0xf8, 0x7f, 0xf0, 0x00, 
	0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xcd, 0x8e, 0x7f, 0xff, 0xf0, 0x00, 
	0x00, 0x21, 0x24, 0x36, 0x87, 0x00, 0x00, 0x00, 0x00, 0x05, 0x89, 0xc8, 0xff, 0xcf, 0xf0, 0x00, 
	0x00, 0x39, 0x24, 0x5b, 0x48, 0x80, 0x00, 0x00, 0x00, 0x0d, 0x89, 0xc8, 0xff, 0xcf, 0xf8, 0x00, 
	0x00, 0x21, 0x24, 0x12, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x09, 0x00, 0xbf, 0xc7, 0xf8, 0x00, 
	0x00, 0x21, 0x24, 0x12, 0x48, 0x00, 0x00, 0x00, 0x50, 0x0e, 0x01, 0x07, 0x0f, 0x0f, 0xf8, 0x00, 
	0x00, 0x21, 0x24, 0x12, 0x48, 0x80, 0x00, 0x00, 0x20, 0x16, 0x87, 0x11, 0x0f, 0x07, 0xfc, 0x00, 
	0x00, 0x20, 0x9c, 0x12, 0x67, 0x00, 0x00, 0x00, 0x50, 0x18, 0xf0, 0x60, 0x74, 0x3f, 0xfc, 0x00, 
	0x00, 0x20, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xb0, 0x90, 0xb7, 0x87, 0xfc, 0x00, 
	0x00, 0x20, 0x04, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x18, 0x30, 0x90, 0xb7, 0x81, 0xfc, 0x20, 
	0x00, 0x20, 0x04, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x18, 0xff, 0x81, 0xff, 0xb4, 0x7c, 0x00, 
	0x00, 0x20, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x18, 0xc1, 0x81, 0x3f, 0xfe, 0x7c, 0x00, 
	0x00, 0x20, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x18, 0x00, 0x8e, 0x9c, 0x7e, 0x7c, 0x00, 
	0x00, 0x20, 0x24, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x18, 0x00, 0x8f, 0xd8, 0x7c, 0xfc, 0x00, 
	0x00, 0x40, 0x18, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x08, 0x30, 0x1f, 0x9a, 0x3d, 0xf8, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x40, 0x04, 0x40, 0x00, 0x00, 0x08, 0x3e, 0x1f, 0xef, 0x1f, 0xf8, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x40, 0x04, 0x40, 0x00, 0x00, 0x0c, 0xbe, 0x7f, 0xe5, 0x0f, 0xf8, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x40, 0x04, 0x40, 0x00, 0x00, 0x04, 0x4e, 0x9f, 0xf3, 0xcf, 0xf0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x40, 0x04, 0x40, 0x00, 0x00, 0x06, 0x01, 0xef, 0xff, 0xcf, 0xf0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x43, 0x84, 0x58, 0xe0, 0x00, 0x06, 0x01, 0xef, 0xff, 0xcf, 0xf0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x74, 0x47, 0x65, 0x10, 0x00, 0x03, 0x81, 0x86, 0xf8, 0xfb, 0xe0, 0x00, 
	0x00, 0x00, 0x00, 0x80, 0x44, 0x44, 0x45, 0xe0, 0x00, 0x01, 0x47, 0x13, 0x48, 0x7f, 0xc0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x45, 0x00, 0x00, 0x01, 0x41, 0xf1, 0xff, 0xff, 0x40, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x45, 0x10, 0x00, 0x00, 0xc0, 0x77, 0xbf, 0x7f, 0x80, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x33, 0x83, 0x24, 0xe0, 0x08, 0x00, 0x40, 0x67, 0xbf, 0x7f, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x01, 0xf4, 0x0e, 0x00, 0x00, 
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x48, 0x00, 0x00, 
	0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x47, 0x90, 0x00, 0x00, 
	0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x47, 0xe0, 0x01, 0x00, 
	0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x1f, 0x00, 0x00, 0x00, 
	0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x00, 
	0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x0d, 0xa1, 0xc7, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x16, 0xd2, 0x28, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x92, 0x28, 0x92, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x92, 0x28, 0x92, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x92, 0x28, 0x92, 0x00, 0x00, 0x00, 0x01, 0xdc, 0x00, 
	0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x04, 0x99, 0xc7, 0x13, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x20, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x20, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// clang-format on

void draw()
{
	if (!_splashScreenFinished)
	{
		return;
	}

	display.clearDisplay();

	//Logo
	display.setFont(&FreeSansBold9pt7b);
	display.setCursor(25, 12);
	display.print("00Key v1");

	//Layer and box
	display.setFont(&FreeSans9pt7b);
	display.setCursor(3, 36);
	display.print("L: ");
	display.print(_layer);
	display.drawRect(0, 20, 36, 22, WHITE);

	//Backlight and box
	display.setCursor(39, 36);
	display.print("B: ");
	display.printf("%03d", _blPercentage);
	display.drawRect(35, 20, 60, 22, WHITE);

	//CapsLock and box
	display.drawRect(94, 20, 34, 22, WHITE);
	if (_capsOn)
	{
		display.setCursor(105, 36);
		display.print("A");
		display.drawRect(102, 22, 18, 17, WHITE);
	}
	else
	{
		display.setCursor(106, 35);
		display.print("a");
	}

	//Red value and box
	display.drawRect(0, 41, 43, 22, WHITE);
	display.setCursor(6, 58);
	display.print(_rValue);

	//Green value and box
	display.drawRect(42, 41, 44, 22, WHITE);
	display.setCursor(49, 58);
	display.print(_gValue);

	//Blue value and box
	display.drawRect(85, 41, 43, 22, WHITE);
	display.setCursor(91, 58);
	display.print(_bValue);

	display.display();
}

void clearSplashScreen()
{
	_splashScreenFinished = true;
	draw();
}

void drawSplashScreen()
{
	display.drawBitmap(0, 0, _logo, 128, 64, WHITE); // display.drawBitmap(x position, y position, bitmap data, bitmap width, bitmap height, color)
	display.display();
}

void OLED::setup()
{
	display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
	display.clearDisplay();
	display.setTextSize(1);

	display.setTextColor(WHITE);
	display.setTextWrap(false);
	setLayer(0);

	drawSplashScreen();
}

void OLED::loop()
{
	if (!_splashScreenFinished && millis() > _splashScreenDuration)
	{
		clearSplashScreen();
	}
}

void OLED::setLayer(int layer)
{
	_layer = layer;
	draw();
}

void OLED::setBacklight(int percentage)
{
	_blPercentage = percentage;
	draw();
}

void OLED::toggleCaps()
{
	_capsOn = !_capsOn;
	draw();
}

void OLED::setUnderglow(char* red, char* green, char* blue)
{
	strncpy(_rValue, red, 3);
	strncpy(_gValue, green, 3);
	strncpy(_bValue, blue, 3);
	draw();
}
