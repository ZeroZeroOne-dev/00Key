#include <Arduino.h>
#include "KeyMap.h"
#include "Globals.h"
#include "OLED.h"

// clang-format off

const int KeyMap::_map[][ROW_COUNT][COL_COUNT] = {
    [0] = {  
        { KEY_ESC, KEY_F1, KEY_F2, KEY_F3, KEY_F4, KEY_F5, KEY_F6, KEY_F7, KEY_F8, KEY_F9, KEY_F10, KEY_F11, KEY_F12, KEY_PRINTSCREEN, KEY_PAUSE, KEY_DELETE },
        { KEY_TILDE, KEY_1, KEY_2, KEY_3, KEY_4, KEY_5, KEY_6, KEY_7, KEY_8, KEY_9, KEY_0, KEY_MINUS, KEY_EQUAL,  KEY_NOKEY, KEY_BACKSPACE, KEY_HOME },
        { KEY_TAB, KEY_NOKEY, KEY_Q, KEY_W, KEY_E, KEY_R, KEY_T, KEY_Y, KEY_U, KEY_I, KEY_O, KEY_P, KEY_LEFT_BRACE, KEY_RIGHT_BRACE, KEY_BACKSLASH, KEY_PAGE_UP },
        { KEY_CAPS_LOCK, KEY_NOKEY, KEY_A, KEY_S, KEY_D, KEY_F, KEY_G, KEY_H, KEY_J, KEY_K, KEY_L, KEY_SEMICOLON, KEY_QUOTE, KEY_ENTER, KEY_NOKEY, KEY_PAGE_DOWN },
        { KEY_NOKEY, KEY_LEFT_SHIFT, KEY_Z, KEY_X, KEY_C, KEY_V, KEY_B, KEY_N, KEY_M, KEY_COMMA, KEY_PERIOD, KEY_SLASH, KEY_NOKEY, KEY_RIGHT_SHIFT, KEY_UP_ARROW, KEY_END },
        { KEY_LEFT_CTRL, KEY_LEFT_GUI, KEY_NOKEY, KEY_LEFT_ALT, KEY_NOKEY, KEY_NOKEY, KEY_SPACE, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_RIGHT_ALT, KEY_00KEY_MOVELAYER, KEY_RIGHT_CTRL, KEY_LEFT_ARROW, KEY_DOWN_ARROW, KEY_RIGHT_ARROW }
    },
    [1] = {  
        { KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY },
        { KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY },
        { KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_00KEY_RED_DOWN, KEY_NOKEY, KEY_00KEY_RED_UP, KEY_NOKEY, KEY_00KEY_NEXT_EFFECT, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY },
        { KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_00KEY_GREEN_DOWN, KEY_NOKEY, KEY_00KEY_GREEN_UP, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY },
        { KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_00KEY_BLUE_DOWN, KEY_NOKEY, KEY_00KEY_BLUE_UP, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_00KEY_BLUP, KEY_NOKEY },
        { KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_NOKEY, KEY_00KEY_MOVELAYER, KEY_NOKEY, KEY_NOKEY, KEY_00KEY_BLDOWN, KEY_NOKEY }
    },
};

// clang-format on

int KeyMap::_currentLayer = 0;

int KeyMap::getKey(byte row, byte col)
{
    return KeyMap::_map[_currentLayer][row][col];
};

void KeyMap::moveLayer()
{
    int totaLayers = (sizeof(KeyMap::_map) / sizeof(*KeyMap::_map));
    if (_currentLayer < (totaLayers - 1))
    {
        _currentLayer++;
    }
    else
    {
        _currentLayer = 0;
    }
    OLED::setLayer(_currentLayer);
};